{"version":3,"sources":["const.js","components/CustomLink.js","components/Header.js","components/Footer.js","views/Home.js","helpers/index.js","components/Repo.js","components/Pages.js","components/BadRequest.js","views/Repos.js","views/PageNotFound.js","Routers.js","App.js","index.js"],"names":["DATE_OF_LAST_THIRTY_DAYS","Date","setDate","getDate","toISOString","split","CustomLink","label","to","activeOnlyWhenExact","match","useRouteMatch","path","exact","className","Header","useState","collapsed","setCollapsed","Navbar","color","light","NavbarBrand","href","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","Footer","Container","getFullYear","target","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Home","Jumbotron","fluid","Button","CURRENT_PAGE","a","axios","get","response","data","items","Repo","avatar_url","name","repoName","description","stargazers_count","open_issues_count","pushed_at","src","alt","points","cx","cy","r","x1","y1","x2","y2","Pages","onclick","currentPage","pageNumbers","i","push","Pagination","aria-label","map","number","PaginationItem","key","PaginationLink","first","id","BadRequest","Repos","repos","setRepos","loading","setLoading","error","setError","setCurrentPage","handleClick","useEffect","getRepos","then","res","catch","length","repo","owner","login","PageNotFound","primary","Routers","restricted","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32684fc8.chunk.js","sourcesContent":["export const GITHUB_API = 'https://api.github.com/search';\nexport const DATE_OF_LAST_THIRTY_DAYS = new Date(\n  new Date().setDate(new Date().getDate() - 30),\n)\n  .toISOString()\n  .split('T')[0];\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst CustomLink = ({ label, to, activeOnlyWhenExact }) => {\n  const match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact,\n  });\n\n  return (\n    <Link className={`link_router ${match ? 'active' : ''}`} to={to}>\n      {label}\n    </Link>\n  );\n};\n\nexport default CustomLink;\n","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n} from 'reactstrap';\nimport { DATE_OF_LAST_THIRTY_DAYS } from '../const';\n\nimport CustomLink from './CustomLink';\n\nconst Header = () => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n    <header>\n      <Navbar color=\"faded\" light>\n        <NavbarBrand href=\"/\" className=\"mr-auto brand\">\n          <span>üç∫</span>\n          {' '}\nRepoApp\n        </NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <CustomLink activeOnlyWhenExact to=\"/\" label=\"Home\" />\n            </NavItem>\n            <NavItem>\n              <CustomLink to={`/repos/${DATE_OF_LAST_THIRTY_DAYS}`} label=\"Repos\" />\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Container } from 'reactstrap';\n\nconst Footer = () => (\n  <footer>\n    <Container>\n      <div className=\"info\">\n        <div className=\"creator\">\n          youssef elbeqqal &copy;\n          {new Date().getFullYear()}\n        </div>\n        {' '}\n        <a href=\"https://github.com/ELBEQQAL94\" target=\"_blank\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-github\"\n          >\n            <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\" />\n          </svg>\n        </a>\n      </div>\n    </Container>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Jumbotron, Button, Container } from 'reactstrap';\nimport { DATE_OF_LAST_THIRTY_DAYS } from '../const';\n\nconst Home = () => (\n  <Container>\n    <Jumbotron fluid={false} className=\"jumbotron\">\n      <h1 className=\"display-3\">Hello, Reactjs!</h1>\n      <p className=\"lead\">\n          The task is to implement a small webapp that will list the most starred\n          Github repos that were created in the last 30 days. You'll be fetching\n          the sorted JSON data directly from the Github API.\n      </p>\n\n      <p className=\"lead text-center pt-3\">\n        <Button className=\"landing_page_btn\">\n          <a href={`/repos/${DATE_OF_LAST_THIRTY_DAYS}`} className=\"nav-link\">\n            <span>üôè</span>\n            {' '}\nRepos\n          </a>\n        </Button>\n      </p>\n    </Jumbotron>\n  </Container>\n);\n\nexport default Home;\n","import axios from 'axios';\nimport { GITHUB_API, DATE_OF_LAST_THIRTY_DAYS } from '../const';\n\nexport async function getRepos(CURRENT_PAGE) {\n  try {\n    const response = await axios.get(\n      `${GITHUB_API}/repositories?q=created:>${DATE_OF_LAST_THIRTY_DAYS}&sort=stars&order=desc&page=${CURRENT_PAGE}`,\n    );\n    return response.data.items;\n  } catch (error) {\n    return error;\n  }\n}\n","import React from 'react';\n\nconst Repo = ({\n  avatar_url,\n  name,\n  repoName,\n  description,\n  stargazers_count,\n  open_issues_count,\n  pushed_at,\n}) => (\n  <div className=\"repo\">\n    <div className=\"avatar\">\n      <img className=\"img-responsive img-fluid\" src={avatar_url} alt={name} />\n    </div>\n\n    <div className=\"info\">\n      <h2>{repoName}</h2>\n      <p className=\"lead\">{description}</p>\n      <div className=\"star_issue\">\n        <span className=\"star\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-star\"\n          >\n            <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\" />\n          </svg>\n          {' '}\n          Star\n          {' '}\n          <strong>{stargazers_count}</strong>\n        </span>\n        <span className=\"issue\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-info\"\n          >\n            <circle cx=\"12\" cy=\"12\" r=\"10\" />\n            <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\" />\n            <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\" />\n          </svg>\n          {' '}\n          Issues\n          {' '}\n          <strong>{open_issues_count}</strong>\n        </span>\n        <span className=\"last_submit\">\n          {new Date(pushed_at).toISOString().split('T')[0]}\n          {' '}\nby\n          {name}\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Repo;\n","import React from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst Pages = ({ onclick, currentPage }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= 10; i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <Pagination aria-label=\"Page navigation example\" className=\"pagination\">\n      {pageNumbers.map((number) => (\n        <PaginationItem className={currentPage === number ? 'active_page' : ''} key={number}>\n          <PaginationLink\n            first\n            href=\"#\"\n            id={number}\n            onClick={() => onclick(number)}\n          >\n            {number}\n          </PaginationLink>\n        </PaginationItem>\n      ))}\n    </Pagination>\n  );\n};\n\nexport default Pages;\n","import React from 'react';\nimport { Container } from 'reactstrap';\n\nconst BadRequest = () => (\n  <Container>\n    <h1 className=\"bad_request\">connection not found!</h1>\n  </Container>\n);\n\nexport default BadRequest;\n","import React, { useState, useEffect } from 'react';\nimport { Container } from 'reactstrap';\nimport { getRepos } from '../helpers';\nimport Repo from '../components/Repo';\nimport Pages from '../components/Pages';\nimport BadRequest from '../components/BadRequest';\n\nconst Repos = () => {\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleClick = (number) => {\n    setCurrentPage(number);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getRepos(currentPage)\n      .then(async (res) => {\n        await setRepos(res);\n        setLoading(false);\n      })\n      .catch((error) => setError(true));\n  }, [currentPage]);\n\n  if (error) return <BadRequest />;\n\n  return (\n    <Container>\n      <section className=\"repos\">\n        <h1>Created Repos in the last 30 days</h1>\n        <hr />\n        <Pages onclick={handleClick} currentPage={currentPage} />\n        {loading ? (\n          <p className=\"lead\">Loading...</p>\n        ) : repos.length > 0 ? (\n          repos.map((repo) => (\n            <Repo\n              key={repo.id}\n              avatar_url={repo.owner.avatar_url}\n              repoName={repo.name}\n              name={repo.owner.login}\n              description={repo.description}\n              stargazers_count={repo.stargazers_count}\n              open_issues_count={repo.open_issues_count}\n              pushed_at={repo.pushed_at}\n            />\n          ))\n        ) : (\n          setError(true)\n        )}\n        <Pages onclick={handleClick} currentPage={currentPage} />\n      </section>\n    </Container>\n  );\n};\n\nexport default Repos;\n","import React from 'react';\nimport { Container, Button } from 'reactstrap';\n\nconst PageNotFound = () => (\n  <section className=\"page_not_found\">\n    <Container>\n      <h1 className=\"text-center\">\nPage Not Found\n        <span className=\"text-danger\">404</span>\n      </h1>\n      <div className=\"text-center\">\n        <Button primary>\n          <a href=\"/\">Home</a>\n        </Button>\n      </div>\n    </Container>\n  </section>\n);\n\nexport default PageNotFound;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { DATE_OF_LAST_THIRTY_DAYS } from './const';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './views/Home';\nimport Repos from './views/Repos';\n\n\nimport PageNotFound from './views/PageNotFound';\n\nconst Routers = () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route restricted={false} component={Home} path=\"/\" exact />\n      <Route restricted={false} component={Repos} path={`/repos/${DATE_OF_LAST_THIRTY_DAYS}`} exact />\n      <Route path=\"*\" component={PageNotFound} />\n    </Switch>\n    <Footer />\n  </Router>\n);\n\nexport default Routers;\n","import React from 'react';\nimport Routers from './Routers';\n\nconst App = () => <Routers />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}